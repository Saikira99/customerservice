# Server port: use the PORT provided by the environment (Render will set this), defaulting to 8081 locally.
server.port=${PORT:8081}

# Database configuration
# For local Docker Compose, the host should be "postgres" (the service name in docker-compose.yml)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/customer_service}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:12345}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Apache Kafka configuration (update if using an external provider)
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Spring Mail configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME:temperory789@gmail.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:ufwwsufczxhmkqsi}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
